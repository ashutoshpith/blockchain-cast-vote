/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SiasTreasury,
  SiasTreasuryInterface,
} from "../../contracts/SiasTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "isReleased",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051610443380380610443833981016040819052610022916100a3565b61002b33610053565b34600155600280546001600160a81b0319166001600160a01b039092169190911790556100d3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100b557600080fd5b81516001600160a01b03811681146100cc57600080fd5b9392505050565b610361806100e26000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063968ed6001161005b578063968ed600146100be578063ae90b213146100d5578063f2fde38b146100e8578063fa2a8997146100fb57600080fd5b806369d8957514610082578063715018a61461008c5780638da5cb5b14610094575b600080fd5b61008a61011f565b005b61008a610193565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c760015481565b6040519081526020016100b5565b6002546100a1906001600160a01b031681565b61008a6100f63660046102fb565b6101a7565b60025461010f90600160a01b900460ff1681565b60405190151581526020016100b5565b610127610239565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116600160a01b179091556001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610190573d6000803e3d6000fd5b50565b61019b610239565b6101a56000610293565b565b6101af610239565b6001600160a01b0381166102305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61019081610293565b6000546001600160a01b031633146101a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610227565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561030d57600080fd5b81356001600160a01b038116811461032457600080fd5b939250505056fea26469706673582212209a7abd0efc54af130cc3b1f1310b2f56f0e2251f66d0cf98063bac124cedea0464736f6c63430008090033";

type SiasTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SiasTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SiasTreasury__factory extends ContractFactory {
  constructor(...args: SiasTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _payee: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<SiasTreasury> {
    return super.deploy(_payee, overrides || {}) as Promise<SiasTreasury>;
  }
  override getDeployTransaction(
    _payee: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_payee, overrides || {});
  }
  override attach(address: string): SiasTreasury {
    return super.attach(address) as SiasTreasury;
  }
  override connect(signer: Signer): SiasTreasury__factory {
    return super.connect(signer) as SiasTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SiasTreasuryInterface {
    return new utils.Interface(_abi) as SiasTreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SiasTreasury {
    return new Contract(address, _abi, signerOrProvider) as SiasTreasury;
  }
}
