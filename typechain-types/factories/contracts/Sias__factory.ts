/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Sias, SiasInterface } from "../../contracts/Sias";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_intialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040516200277738038062002777833981016040819052620000359162000891565b8280604051806040016040528060018152602001603160f81b815250858581600390805190602001906200006b92919062000728565b5080516200008190600490602084019062000728565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525062000121905033826200012a565b505050620009a2565b6200014182826200014560201b62000a8d1760201c565b5050565b6200015c8282620001fc60201b62000b2a1760201c565b6001600160e01b0362000170620002eb8216565b1115620001dd5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b620001f6600962000c15620002f160201b178362000306565b50505050565b6001600160a01b038216620002545760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620001d4565b80600260008282546200026891906200091a565b90915550506001600160a01b03821660009081526020819052604081208054839290620002979084906200091a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36200014160008383620004bd565b60025490565b6000620002ff82846200091a565b9392505050565b8254600090819080156200035857856200032260018362000935565b815481106200033557620003356200094f565b60009182526020909120015464010000000090046001600160e01b03166200035b565b60005b6001600160e01b031692506200037283858760201c565b9150600081118015620003b6575043866200038f60018462000935565b81548110620003a257620003a26200094f565b60009182526020909120015463ffffffff16145b156200042a57620003d282620004d560201b62000c211760201c565b86620003e060018462000935565b81548110620003f357620003f36200094f565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550620004af565b8560405180604001604052806200044c436200054460201b62000ca41760201c565b63ffffffff1681526020016200046d85620004d560201b62000c211760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b505050565b620004b8838383620005ab60201b62000d201760201c565b60006001600160e01b03821115620005405760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401620001d4565b5090565b600063ffffffff821115620005405760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401620001d4565b620005c3838383620004b860201b62000d521760201c565b6001600160a01b03838116600090815260076020526040808220548584168352912054620004b892918216911683818314801590620006025750600081115b15620004b8576001600160a01b038316156200068f576001600160a01b0383166000908152600860209081526040822082916200064c91906200071a901b62000d57178562000306565b91509150846001600160a01b031660008051602062002757833981519152838360405162000684929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620004b8576001600160a01b038216600090815260086020908152604082208291620006d39190620002f1901b62000c15178562000306565b91509150836001600160a01b03166000805160206200275783398151915283836040516200070b929190918252602082015260400190565b60405180910390a25050505050565b6000620002ff828462000935565b828054620007369062000965565b90600052602060002090601f0160209004810192826200075a5760008555620007a5565b82601f106200077557805160ff1916838001178555620007a5565b82800160010185558215620007a5579182015b82811115620007a557825182559160200191906001019062000788565b50620005409291505b80821115620005405760008155600101620007ae565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620007ec57600080fd5b81516001600160401b0380821115620008095762000809620007c4565b604051601f8301601f19908116603f01168101908282118183101715620008345762000834620007c4565b816040528381526020925086838588010111156200085157600080fd5b600091505b8382101562000875578582018301518183018401529082019062000856565b83821115620008875760008385830101525b9695505050505050565b600080600060608486031215620008a757600080fd5b83516001600160401b0380821115620008bf57600080fd5b620008cd87838801620007da565b94506020860151915080821115620008e457600080fd5b50620008f386828701620007da565b925050604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b6000821982111562000930576200093062000904565b500190565b6000828210156200094a576200094a62000904565b500390565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200097a57607f821691505b602082108114156200099c57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051611d65620009f260003960006111ee0152600061123d01526000611218015260006111710152600061119b015260006111c50152611d656000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806370a08231116100d8578063a457c2d71161008c578063d505accf11610066578063d505accf1461034e578063dd62ed3e14610361578063f1127ed81461039a57600080fd5b8063a457c2d714610315578063a9059cbb14610328578063c3cda5201461033b57600080fd5b80638e539e8c116100bd5780638e539e8c146102e757806395d89b41146102fa5780639ab24eb01461030257600080fd5b806370a08231146102ab5780637ecebe00146102d457600080fd5b80633644e5151161013a578063587cde1e11610114578063587cde1e1461022a5780635c19a95c1461026e5780636fcfff451461028357600080fd5b80633644e515146101fc57806339509351146102045780633a46b1a81461021757600080fd5b806318160ddd1161016b57806318160ddd146101c857806323b872dd146101da578063313ce567146101ed57600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f6103d7565b60405161019c9190611a16565b60405180910390f35b6101b86101b3366004611a87565b610469565b604051901515815260200161019c565b6002545b60405190815260200161019c565b6101b86101e8366004611ab1565b610481565b6040516012815260200161019c565b6101cc6104a5565b6101b8610212366004611a87565b6104b4565b6101cc610225366004611a87565b6104f3565b610256610238366004611aed565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b03909116815260200161019c565b61028161027c366004611aed565b610572565b005b610296610291366004611aed565b61057f565b60405163ffffffff909116815260200161019c565b6101cc6102b9366004611aed565b6001600160a01b031660009081526020819052604090205490565b6101cc6102e2366004611aed565b6105a7565b6101cc6102f5366004611b08565b6105c5565b61018f610621565b6101cc610310366004611aed565b610630565b6101b8610323366004611a87565b6106b7565b6101b8610336366004611a87565b610761565b610281610349366004611b32565b61076f565b61028161035c366004611b8a565b6108a5565b6101cc61036f366004611bf4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103ad6103a8366004611c27565b610a09565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161019c565b6060600380546103e690611c67565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611c67565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b600033610477818585610d63565b5060019392505050565b60003361048f858285610ebb565b61049a858585610f47565b506001949350505050565b60006104af611164565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061047790829086906104ee908790611cb2565b610d63565b60004382106105495760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260086020526040902061056b908361128b565b9392505050565b61057c3382611348565b50565b6001600160a01b0381166000908152600860205260408120546105a190610ca4565b92915050565b6001600160a01b0381166000908152600560205260408120546105a1565b60004382106106165760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610540565b6105a160098361128b565b6060600480546103e690611c67565b6001600160a01b03811660009081526008602052604081205480156106a4576001600160a01b0383166000908152600860205260409020610672600183611cca565b8154811061068257610682611ce1565b60009182526020909120015464010000000090046001600160e01b03166106a7565b60005b6001600160e01b03169392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156107545760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610540565b61049a8286868403610d63565b600033610477818585610f47565b834211156107bf5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610540565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610839906108319060a001604051602081830303815290604052805190602001206113d9565b858585611442565b90506108448161146a565b86146108925760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610540565b61089c8188611348565b50505050505050565b834211156108f55760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610540565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109248c61146a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061097f826113d9565b9050600061098f82878787611442565b9050896001600160a01b0316816001600160a01b0316146109f25760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610540565b6109fd8a8a8a610d63565b50505050505050505050565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610a4d57610a4d611ce1565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610a978282610b2a565b6002546001600160e01b031015610b165760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610540565b610b246009610c1583611492565b50505050565b6001600160a01b038216610b805760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610540565b8060026000828254610b929190611cb2565b90915550506001600160a01b03821660009081526020819052604081208054839290610bbf908490611cb2565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610c116000838361160b565b5050565b600061056b8284611cb2565b60006001600160e01b03821115610ca05760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610540565b5090565b600063ffffffff821115610ca05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610540565b6001600160a01b03838116600090815260076020526040808220548584168352912054610d5292918216911683611616565b505050565b600061056b8284611cca565b6001600160a01b038316610dde5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610540565b6001600160a01b038216610e5a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610540565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610b245781811015610f3a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610540565b610b248484848403610d63565b6001600160a01b038316610fc35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610540565b6001600160a01b03821661103f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610540565b6001600160a01b038316600090815260208190526040902054818110156110ce5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610540565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611105908490611cb2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161115191815260200190565b60405180910390a3610b2484848461160b565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156111bd57507f000000000000000000000000000000000000000000000000000000000000000046145b156111e757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090815b818110156112ef5760006112a68284611753565b9050848682815481106112bb576112bb611ce1565b60009182526020909120015463ffffffff1611156112db578092506112e9565b6112e6816001611cb2565b91505b50611292565b81156113335784611301600184611cca565b8154811061131157611311611ce1565b60009182526020909120015464010000000090046001600160e01b0316611336565b60005b6001600160e01b031695945050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610b24828483611616565b60006105a16113e6611164565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006114538787878761176e565b915091506114608161185b565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b8254600090819080156114dd57856114ab600183611cca565b815481106114bb576114bb611ce1565b60009182526020909120015464010000000090046001600160e01b03166114e0565b60005b6001600160e01b031692506114f983858763ffffffff16565b915060008111801561153757504386611513600184611cca565b8154811061152357611523611ce1565b60009182526020909120015463ffffffff16145b156115975761154582610c21565b86611551600184611cca565b8154811061156157611561611ce1565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611602565b8560405180604001604052806115ac43610ca4565b63ffffffff1681526020016115c085610c21565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b610d52838383610d20565b816001600160a01b0316836001600160a01b0316141580156116385750600081115b15610d52576001600160a01b038316156116c6576001600160a01b0383166000908152600860205260408120819061167390610d5785611492565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516116bb929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610d52576001600160a01b038216600090815260086020526040812081906116fc90610c1585611492565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611744929190918252602082015260400190565b60405180910390a25050505050565b60006117626002848418611cf7565b61056b90848416611cb2565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156117a55750600090506003611852565b8460ff16601b141580156117bd57508460ff16601c14155b156117ce5750600090506004611852565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611822573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661184b57600060019250925050611852565b9150600090505b94509492505050565b600081600481111561186f5761186f611d19565b14156118785750565b600181600481111561188c5761188c611d19565b14156118da5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610540565b60028160048111156118ee576118ee611d19565b141561193c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610540565b600381600481111561195057611950611d19565b14156119a95760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610540565b60048160048111156119bd576119bd611d19565b141561057c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610540565b600060208083528351808285015260005b81811015611a4357858101830151858201604001528201611a27565b81811115611a55576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611a8257600080fd5b919050565b60008060408385031215611a9a57600080fd5b611aa383611a6b565b946020939093013593505050565b600080600060608486031215611ac657600080fd5b611acf84611a6b565b9250611add60208501611a6b565b9150604084013590509250925092565b600060208284031215611aff57600080fd5b61056b82611a6b565b600060208284031215611b1a57600080fd5b5035919050565b803560ff81168114611a8257600080fd5b60008060008060008060c08789031215611b4b57600080fd5b611b5487611a6b565b95506020870135945060408701359350611b7060608801611b21565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611ba557600080fd5b611bae88611a6b565b9650611bbc60208901611a6b565b95506040880135945060608801359350611bd860808901611b21565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611c0757600080fd5b611c1083611a6b565b9150611c1e60208401611a6b565b90509250929050565b60008060408385031215611c3a57600080fd5b611c4383611a6b565b9150602083013563ffffffff81168114611c5c57600080fd5b809150509250929050565b600181811c90821680611c7b57607f821691505b6020821081141561148c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc557611cc5611c9c565b500190565b600082821015611cdc57611cdc611c9c565b500390565b634e487b7160e01b600052603260045260246000fd5b600082611d1457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea264697066735822122090bf1a2af5b7c926bb74d592bd5a51e6cb072777827f0ea5a485472668a08b2d64736f6c63430008090033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type SiasConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SiasConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sias__factory extends ContractFactory {
  constructor(...args: SiasConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _intialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Sias> {
    return super.deploy(
      _name,
      _symbol,
      _intialSupply,
      overrides || {}
    ) as Promise<Sias>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _intialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _intialSupply,
      overrides || {}
    );
  }
  override attach(address: string): Sias {
    return super.attach(address) as Sias;
  }
  override connect(signer: Signer): Sias__factory {
    return super.connect(signer) as Sias__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SiasInterface {
    return new utils.Interface(_abi) as SiasInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sias {
    return new Contract(address, _abi, signerOrProvider) as Sias;
  }
}
